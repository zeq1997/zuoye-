递归


function sum(n)  //n:2
{
	if(n==1)
		return 1;
	return n+sum(n-1);
}
  n=1; 
  n=2; 2+sum(2-1)==3
  n=3; 3+sum(3-1=2的值是3)=6
  n=4; 4+sum(4-1=3的值6)==10
   sum(1)=1//1
sum(2)=3//1+2//2+(2-1)
sum(3)=6//1+2+3//3+sum(3-1)
sum(4)=10//1+2+3+4//4+sum(4-1)
sum(5)=15//1+2+3+4+5//n+sum(n-1)=5+sum(5-1)
//sum(5)

1 1 ....

fibnacci 数列
1 1 .....  求第五项；第三项加第四项为第五项
function sum(n)
{ 
    if(n==1||n==2)
        return 1;
     return sum(n-1)+sum(n-2);
}


楼梯

function sum(n)
{ 
    if(n==1)
       return 1;
    if(n==2)
       return 2;
    return sum(n-1)+sum(n-2);
}
n=5;sum(n-1)+sum(n-2)

3>=[1,2,3] [1]=[[1]]=1
           [2]=[[1][2]||[2][1]]
           [3]=[[1][2][3]]




换酒 
每瓶啤酒2元，2个空酒瓶或4个瓶盖可换1瓶啤酒。10元最多可喝多少瓶啤酒？
10元:5瓶
5个瓶盖5个空瓶换:3瓶
喝完后，剩
4个瓶盖4个空瓶换:3瓶
喝完后，剩
3个瓶盖，3个空瓶换:1瓶，
剩4个瓶盖，2个空瓶:2瓶
喝完剩2个瓶盖，2个空瓶，换:1瓶     
共15瓶
function j(a,b,c)               //a：换的啤酒瓶数 b：空酒瓶 c；瓶盖  i  ；原啤酒瓶数   2||4==2个空酒瓶或4个瓶盖可换1瓶啤酒；
{
    var i=a;//营长                                           
    b=b+a;                        //(空酒瓶 或 瓶盖 换的“啤酒”数）*2【a*2】+余数(空酒瓶  或  瓶盖  换"啤酒"的剩空酒瓶数)【b%2】||【c%4】= "空酒瓶数"或"瓶盖"【b】||【c】   
    c=c+a;
    a=(b-b%2)/2+((c-c%4)/4);//连长       //(空酒瓶总数-空酒瓶换"啤酒"的剩空酒瓶数/2) + (瓶盖总数-瓶盖换"啤酒"剩的瓶盖数/4)==换的酒瓶数；
    if(b<2&&c<4)//就是把能换的酒换完；                                           //a=b+c                                                                              
        return i;                   
    b=b%2;       //空酒瓶余数 b               《关键；i的值是从5变到0的；if(b<2&&c<4)意思是假如i=5第一次换酒只能换3瓶，其他的还剩1个空酒瓶  或 1个 瓶盖就换不了结束；开始下个循环i=4；条件(b<2&&c<4)把酒换完；又能换好多酒。》
    c=c%4;       //瓶盖余数   c                                            (b<2&&c<4)就是把能换的酒换完；                     
    return i+j(a,b,c); //小兵           //  瓶数为1；a为0，5+j(1+3+3+3)=15       
}                                      //    瓶数=2   a=1,  
j(5,0,0)                              //         3     3
15                                   //        4     3
                                    //        5     3


每只鸡4元，2个鸡T脚能买1只鸡或4个鸡翅能买1只鸡。20元最多可喝多少只鸡？
function k(a,b,c)                       
{                                      
    var n=a;                           错误试题；5鸡，换10脚换5鸡，，，无限5鸡换五鸡               
    b=b+a;
    c=c+a;
    a=(b-b%2)/2+((c-c%4)/4);//(鸡脚总数-几只脚换鸡的剩鸡脚数/2) + (鸡翅总数-几只翅换鸡的剩鸡翅数/4)==换鸡数；
    if(b<2&&c<4)
       return n;
    b=2*(b%2)
    c=2*(c%4)    
    return n+k(a,b,c);
}
k(5,0,0)
Uncaught RangeError: Maximum call stack size exceeded(…)无限递归（报错）   

 









                                                                                   
                                    






         