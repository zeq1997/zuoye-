<link rel="shortcut icon" href="5.jpg"/>
                     图标 链接   图片位置
<title>百度一下，你就知道</title>
_________________________________________________网页图标与名称
<a href="www.baidu.com">
链接  =  链接位置   a href__超链接
___________________________________________________________-添加链接
<b>记事本</b>字体加粗
<br/>换行
――――――――――――――――――――――――――――――――格式
var g=0;
var h=["red","yellow","blue","green","black"];
function j()
{
    low_login_wording.style.background=h[g];
    g=g+1;
    if(g>=h.length)
        g=0;
}

setInterval(j,500);
网页文字，底纹边框颜色自动连续转换_____________________________________________________连续变换底纹颜色
var index = 0;
关键词  自定义代码=0
var cls = ["red","yellow","blue"];
关键词 自定义代码=["颜色","颜色"]；
function  setColor()
作用 于 自定义代码 以下内容
{
内容格式
    low_login_wording.style.color = cls[index];
    ID                属性  颜色  = 自定义代码[自定义代码] 
    index = index + 1;
    自定义代码=自定义代码+1
    if(index>=cls.length)
    如果（自定义代码>=自定义代码.长度）
        index=0;
        自定义代码=0; 
}
内容格式
setInterval(setColor,500);
放置 间隔  （自定义代码，单位毫秒的时间数字）_________________________________________连续变换文字、线颜色
<head></head>
<body>
<div id="h" font style ="color:white;font-size:30px">李维富</font>
     id的代入                    文字颜色；白色
<script>
var m = 0;
var n = ["red","blue","yellow","black"];
function k()
{                                                           注:底纹，字体的自定义代码，颜色不能重复
    h.style.background = n[m];
    m = m + 1;
    if(m>=n.length)
        m=0;
}
setInterval(k,600);
</script>
<script>
var a = 0;
var b = ["black","yellow","blue","white"];
function c()
{
    h.style.color = b[a];
    a = a + 1;
    if(a>=b.length)
        a=0;
}
setInterval(c,600);
放置 间隔  （自定义代码，单位毫秒的时间数字）
</script>
</body>
</html>___________________________________________________________________连续变换文字，底纹颜色
<html>
<head></head>
<body>

<div id="h" style ="width:100px;height:100px;border: 1px solid;background:white;position:absolute;top:100;left:100">
     id的代入                                                             白色
<script> 
var a = 0;
var b = ["red","blue","yellow","black"];
function c()
{
    h.style.color = b[a];                                         注:底纹，边框的自定义代码，颜色不能重复
    a = a + 1;
    if(a>=b.length)                                            
        a=0;
}
setInterval(c,600);
</script>
<script>
var m = 0;
var n = ["blue","red","black","yellow"];
function k()
{
    h.style.background = n[m];
    m = m + 1;
    if(m>=n.length)
       m=0;
}

setInterval(k,600);
</script>
</body>
</html>___________________________________________________________________连续变换图形边框，底纹颜色
/
/
<html>
网页
<head></head>
头部
<body>
内容
<div id="low_login_wording" style="width:100;height:100;
 框  ID="id"                属性="长:px";高:px;
border:1px solid;background:red;position:absolute;top:100;left:100"/>
线属性:px  实线;底纹颜色   :颜色；位置定义：绝对的（fixed固定的）:上:px;左：px"
</body>
内容结尾
</html>
网页结尾

ID及图像代码______________________________________________________________________________给图像添加ID
/
/
/
网页id.style.display="none"不显示这个id的项目   注;[]
             属性显示 不显示
document.getElementsByClassName("class")
证明     抓住 要素  由班级（种类）名字
a.children[0].children[0].style.display = "none";
                                                          inline-block
                                                          显示
自定义代码。子[第几个]。孩子[第几个]。属性。显示="不显示";____________________________________查找内容
u.click();
id.点击（）;
u.value="12345"
id.意义="内容"______________________________________________________文本框内填入内容

<script>脚本
列如：var g=0;
var h=["red","yellow","blue","green","black"];
function j()
{
    low_login_wording.style.background=h[g];
    g=g+1;
    if(g>=h.length)
        g=0;
}

setInterval(j,500);
</script>脚本结束____________________________________________________________________添加脚本
/
/
/
var y=document.getElementsByClassName("login_pictures_picture")[0]
y.style.position ="relative";
var n=100
function j()
{
    y.style.top=n+"px"
    自定义代码.距离上=
    n=n+10
    if(n>=200)
        n=100
}

setInterval(j,500);
网页图片的自动移动代码__________________________________________________________图片的循环移动
var n=1
function j()
{
    u.value=n
    n=n+1
}

setInterval(j,500);
网页框内数字变化_________________________________________________________________________数字自动变换（增长）

算数运算符
+ - * / % -- ++ =
列如：a--等价于（a）
    ：--a等价于（a-1）
    ：++a等价于（a+1）
比较运算符
== <  >  <=  >= !=
列如：9=9  8<9  8>7  9!=10 9<=9 9<=10来进行比较判断对错
逻辑运算符
||      &&      !
或    且，都    不
列如：他||她是男的（结果是对的true）
    ：他&&他是男的（结果是对的true）
    ：!他是男的    (结果是错的false)
赋值运算符
=  +=  -=  *=  /=  %=
列如：a+10等价于a=a+5;
      b*c+7等价于b=b*(c+7);
      j%=k等价于j=j%k__________________________________________________________________________运算符
图形来回循环移动
oo.style.position ="relative";
ID.属性.方位="相对的"
var n=100
关键词  自定义代码=数据
var m=10
关键词  自定义代码=数据（每次变换数据）
function k()
作用   自定义代码（）
{
    oo.style.left=n+"px";
    ID。属性。方向=自定义代码+"px"
    n=n+m；
    ID=自定义代码+自定义 代码
    if(n>=200)
    如果（自定义代码>=数据）
        m=-m
        自定义代码=负的自定义代码
    if(n<=100)
    如果（自定义代码<=数据）
        m=-m
        自定义代码=负的自定义代码
       
}
setInterval(k,100);
放置间隔（自定义代码，毫秒单位的数字）;_____________________________________________________图片来回移动
右移左移运算
100101>>得到1001
1011<<得到101100_________________________________运算

二进制算法
1  0  1  0  0  1
2的5次方+2的3次方+2的0次方（只看1忽略0）
10进制算二级制
2|15
 ―――1
 2|7
  ―――1
  2|3           =1111
   ―――1
   2|1
    ―――1
     0
除法余数（倒着念）
位运算（对true默认是1）（错false默认为0）
15|24=31     15&24=0
15二进制1111   24二进制11000
01111        01111
11000 |      11000 &
――――     ――――
11111        01000
_______________________________________________________________________________________二进制